# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/xlashie/api/
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - checkout:
          path: ~/xlashie

      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - run: make lint-check

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

  deploy-stg:
    working_directory: ~/xlashie/api/
    docker:
      - image: cimg/php:7.4.26
    environment:
      HOST_PORT: 7002
      FQDN: staging.xlashie.net
      APP_ENV: staging
      DB_DATABASE: xlashie-staging
    steps: &deploy_steps
      - checkout:
          path: ~/xlashie
      - run: php --version
      - run:
          name: Build laravel env file
          command: |
            cd .. &&  ./build_env.sh
      - run: sudo docker-php-ext-install zip iconv
      - run: composer install -n --prefer-dist
      - run: npm install && npm run prod
      - run:
          name: Copy Argon theme CSS framework
          command: |
            cp -rf node_modules/\@creative-tim-official/argon-dashboard-free/assets/vendor/ ./public/assets/vendor/
      - deploy:
          name: deploy
          command: |
            rsync -aLzv --exclude "storage" --exclude "composer.lock" --exclude ".git" --exclude "*.core" --exclude "%.swap" \
            -e "ssh -o 'StrictHostKeyChecking no' -p $HOST_PORT" ./ rsync@$HOST_IP:api

  deploy-prod:
    working_directory: ~/xlashie/api/
    docker:
      - image: circleci/php:7.4-node-browsers
    environment:
      HOST_PORT: 7001
      FQDN: xlashie.net
      APP_ENV: production
      DB_DATABASE: xlashie
    steps: *deploy_steps

# Orchestrate our job run sequence
workflows:
  version: 2
  commit-pipline:
    jobs:
      - build

  deploy-pipline:
    jobs:
      - deploy-stg-approval:
          type: approval
          filters: &workflow_deploy_filters
            branches:
              ignore: /.*/
            tags:
              only: /^deploy-.*/

      - deploy-prod-approval:
          type: approval
          filters: *workflow_deploy_filters

      - deploy-stg:
          requires:
            - deploy-stg-approval
          filters: *workflow_deploy_filters

      - deploy-prod:
          requires:
            - deploy-stg
            - deploy-prod-approval
          filters: *workflow_deploy_filters
