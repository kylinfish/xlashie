# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/xlashie/
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout:
          path: ~/xlashie

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

  deploy-prod:
    working_directory: ~/xlashie/
    docker:
      - image: circleci/php:7.4-node-browsers
    environment:
      HOST_IP: HOST_IP
      HOST_POART: HOST_PORT
    steps:
      - run: sudo apt update && sudo apt install rsync
      - checkout
      - deploy:
          name: deploy
          command: |
            rsync -aLz --deploy-updates --delete  --exclude 'Makefile' --exclude 'composer.lock' --exclude 'debug.php' --exclude '.git' --exclude '*.core' --exclude '%.swap' \
            --delete-excluded -e 'ssh -p $HOST_PORT' ./api/ rsync@$HOST_IP:api

# Orchestrate our job run sequence
workflows:
  version: 2
  deploy-pipline:
    jobs:
      - build
      - deploy-prod-approval:
          type: approval
          requires:
            - build

      - deploy-prod:
          requires:
            - deploy-prod-approval
