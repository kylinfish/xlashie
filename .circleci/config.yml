# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/xlashie/
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - checkout:
          path: ~/xlashie

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

  deploy-stg:
    working_directory: ~/xlashie/
    docker:
      - image: circleci/php:7.4-node-browsers
    environment:
      HOST_IP: $HOST_IP
      HOST_PORT: $HOST_PORT_STG
    steps: &deploy_steps
      - build
      - run: sudo apt update && sudo apt install rsync
      - deploy:
          name: deploy
          command: |
            rsync -aLz --delete  --exclude 'Makefile' --exclude 'composer.lock' --exclude 'debug.php' --exclude '.git' --exclude '*.core' --exclude '%.swap' \
            --delete-excluded -e 'ssh -p $HOST_PORT' ./api/ rsync@$HOST_IP:api

  deploy-prod:
    working_directory: ~/xlashie/
    docker:
      - image: circleci/php:7.4-node-browsers
    environment:
      HOST_IP: $HOST_IP
      HOST_PORT: $HOST_PORT_PROD
    steps: *deploy_steps

# Orchestrate our job run sequence
workflows:
  version: 2
  commit-pipline:
    jobs:
      - checkout
      - build
  deploy-pipline:
    jobs:
      - deploy-stg-approval:
          type: approval
          filters: &workflow_deploy_filters
            branches:
              ignore: /.*/
            tags:
              # deploy/20200304.000
              only: /^deploy+\/.+%/
      - deploy-prod-approval:
          type: approval
          filters: *workflow_deploy_filters
              
      - deploy-stg:
          requires:
            - deploy-stg-approval

      - deploy-prod:
          requires:
            - deploy-prod-approval
